#!/bin/bash
 
# Arbitrary but unique message tag
msgTag="dunst-volume"
 
if [[ "$@" == "toggle" ]]; then
    pactl set-sink-mute $(pactl info | grep 'Default Sink' | cut -d ' ' -f 3) "$@" > /dev/null
else
    pactl set-sink-volume $(pactl info | grep 'Default Sink' | cut -d ' ' -f 3) "$@" > /dev/null
fi
 
 
# Query pactl for the current volume and whether or not the speaker is muted
volume="$(pactl list sinks | grep -A 7 "$(pactl info | grep 'Default Sink' | cut -d ' ' -f 3)" | grep Volume | awk '{print $5}' | sed '1p;d')"
mute="$(pactl list sinks | grep -A 7 "$(pactl info | grep 'Default Sink' | cut -d ' ' -f 3)" | grep Mute | awk '{print $2}' | sed '1p;d')"
if [[ $volume == "0%" || "$mute" == "yes" ]]; then
    # Show the sound muted notification
    dunstify -t 1000 -a "changeVolume" -u low -h string:x-dunst-stack-tag:$msgTag "Volume muted" 
else
    # Show the volume notification
    dunstify -t 1000 -a "changeVolume" -u low -h string:x-dunst-stack-tag:$msgTag -h int:value:"$volume" "Volume: ${volume}"
fi
